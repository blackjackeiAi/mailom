# Task Master Tasks Configuration
# Mailom - Tree Cost Management System

project:
  name: mailom
  description: "Tree cost management system for tracking and analyzing tree costs"
  version: "0.1.0"
  framework: "Next.js 14"
  database: "Prisma + SQLite"

tasks:
  # Development Tasks
  dev:
    description: "Start development server"
    command: "npm run dev"
    port: 3000
    watch: true
    
  build:
    description: "Build the application for production"
    command: "npm run build"
    
  start:
    description: "Start production server"
    command: "npm start"
    port: 3000
    
  lint:
    description: "Run ESLint code linting"
    command: "npm run lint"
    
  # Database Tasks
  db:migrate:
    description: "Run database migrations"
    command: "npx prisma migrate dev"
    
  db:generate:
    description: "Generate Prisma client"
    command: "npx prisma generate"
    
  db:studio:
    description: "Open Prisma Studio"
    command: "npx prisma studio"
    port: 5555
    
  db:seed:
    description: "Seed the database with initial data"
    command: "npm run seed"
    
  db:reset:
    description: "Reset database and run migrations"
    command: "npx prisma migrate reset"
    confirm: true
    
  # Data Import Tasks
  import:excel:
    description: "Import Excel data into database"
    command: "npm run import-excel"
    
  import:dry-run:
    description: "Dry run Excel import (test without saving)"
    command: "npx ts-node scripts/dry-run-import.ts"
    
  # Utility Tasks
  clean:
    description: "Clean build artifacts"
    command: "rm -rf .next dist"
    
  install:
    description: "Install dependencies"
    command: "npm install"
    
  postinstall:
    description: "Run post-install tasks"
    command: "npm run postinstall"
    
  # High Priority Tasks
  fix:api-gardens:
    description: "âœ… Fix API /api/our-gardens Internal Server Error 500"
    priority: "high"
    status: "completed"
    command: "echo 'Check API implementation and error handling'"
    
  check:garden-data:
    description: "âœ… Check if garden data is completely created in database"
    priority: "high"
    status: "completed"
    command: "npx prisma studio"
    
  fix:user-token:
    description: "âœ… Fix getUserFromToken function to work correctly with cookies"
    priority: "high"
    status: "completed"
    command: "echo 'Review and fix getUserFromToken implementation'"
    
  test:all-pages:
    description: "âœ… Test all pages functionality and fix issues"
    priority: "high"
    status: "completed"
    command: "echo 'Test complete application functionality'"
    
  fix:sale-page:
    description: "âœ… Fix /admin/sale page functionality"
    priority: "high"
    status: "completed"
    command: "echo 'Update sale page to use real API data'"
    
  fix:stock-page:
    description: "âœ… Fix /admin/stock page functionality"
    priority: "high"
    status: "completed"
    command: "echo 'Update stock page schema and authentication'"
    
  # Medium Priority Tasks
  test:rbac:
    description: "âœ… Test role-based access control for admin, manager, employee"
    priority: "medium"
    status: "completed"
    command: "echo 'Test RBAC implementation'"
    
  fix:supplier-gardens-api:
    description: "âœ… Fix API /api/supplier-gardens to work correctly"
    priority: "medium"
    status: "completed"
    command: "echo 'Check and fix supplier-gardens API'"
    
  update:stock-create:
    description: "âœ… Update /admin/stock/create page to use supplier-gardens instead of gardens"
    priority: "medium"
    status: "completed"
    command: "echo 'Update stock create page implementation'"
    
  test:login-flow:
    description: "âœ… Test login flow: admin/login â†’ select-garden â†’ dashboard"
    priority: "medium"
    status: "completed"
    command: "echo 'Test complete login flow'"
    
  # Low Priority Tasks (Future Enhancements)
  fix:dashboard-data:
    description: "âœ… Fix dashboard to display data according to selected garden"
    priority: "low"
    status: "completed"
    command: "echo 'Update dashboard data filtering'"
    
  add:contact-management:
    description: "âœ… Add contact management page (suppliers, customers, vendors)"
    priority: "medium"
    status: "completed"
    command: "echo 'Create contact management interface'"
    
  add:garden-management:
    description: "ðŸ’¡ Add supplier gardens management page (add/edit/delete)"
    priority: "low"
    status: "future"
    command: "echo 'Create supplier gardens management interface'"
    
  add:sales-management:
    description: "ðŸ’¡ Add complete sales management system"
    priority: "low"
    status: "future"
    command: "echo 'Create sales recording and management'"
    
  add:reporting:
    description: "ðŸ’¡ Add comprehensive reporting system"
    priority: "low"
    status: "future"
    command: "echo 'Create detailed reports and analytics'"

# Workflows - Combinations of tasks
workflows:
  setup:
    description: "Complete project setup"
    steps:
      - install
      - db:generate
      - db:migrate
      - db:seed
      
  fresh-start:
    description: "Fresh project start (reset everything)"
    steps:
      - clean
      - install
      - db:reset
      - db:seed
      
  deploy:
    description: "Prepare for deployment"
    steps:
      - lint
      - build
      - db:generate
      
  data-refresh:
    description: "Refresh data from Excel files"
    steps:
      - import:dry-run
      - import:excel
      
  completed-tasks:
    description: "âœ… All core tasks completed successfully"
    status: "completed"
    summary:
      high_priority: "5/5 completed"
      medium_priority: "5/5 completed" 
      low_priority: "1/1 completed"
      total: "11/11 completed"
    
  production-ready:
    description: "ðŸŽ‰ Application is production ready"
    steps:
      - "âœ… Authentication system working"
      - "âœ… Role-based access control implemented"
      - "âœ… Database seeded with sample data"
      - "âœ… All main pages functional"
      - "âœ… API endpoints working correctly"
      
  future-enhancements:
    description: "ðŸ’¡ Planned future features"
    steps:
      - add:garden-management
      - add:sales-management
      - add:reporting

# Environment configurations
environments:
  development:
    NODE_ENV: "development"
    PORT: 3000
    
  production:
    NODE_ENV: "production"
    PORT: 3000

# File watchers
watchers:
  prisma:
    files: ["prisma/schema.prisma"]
    tasks: ["db:generate"]
    
  excel:
    files: ["Doc/*.xlsx"]
    tasks: ["import:dry-run"]