import { PrismaClient } from '@prisma/client'
import bcrypt from 'bcryptjs'

const prisma = new PrismaClient()

async function main() {
  console.log('üßπ Cleaning up existing data...')
  // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡πà‡∏≠‡∏ô (‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏•‡∏µ‡∏Å‡πÄ‡∏•‡∏µ‡πà‡∏¢‡∏á foreign key constraints)
  await prisma.transaction.deleteMany({})
  await prisma.sale.deleteMany({})
  await prisma.productCost.deleteMany({})
  await prisma.product.deleteMany({})
  await prisma.purchase.deleteMany({})
  await prisma.customer.deleteMany({})
  await prisma.userGarden.deleteMany({})
  await prisma.ourGarden.deleteMany({})
  await prisma.supplierGarden.deleteMany({})
  await prisma.costCategory.deleteMany({})
  await prisma.user.deleteMany({})

  console.log('üë• Creating users...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á users ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å role
  const adminPassword = await bcrypt.hash('admin123', 12)
  const managerPassword = await bcrypt.hash('manager123', 12)
  const employeePassword = await bcrypt.hash('employee123', 12)
  const userPassword = await bcrypt.hash('user123', 12)

  const admin = await prisma.user.create({
    data: {
      email: 'admin@mailom.com',
      password: adminPassword,
      name: '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö',
      role: 'ADMIN',
    },
  })

  const manager = await prisma.user.create({
    data: {
      email: 'manager@mailom.com',
      password: managerPassword,
      name: '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢',
      role: 'MANAGER',
    },
  })

  const employee = await prisma.user.create({
    data: {
      email: 'employee@mailom.com',
      password: employeePassword,
      name: '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô ‡∏™‡∏°‡∏´‡∏ç‡∏¥‡∏á',
      role: 'EMPLOYEE',
    },
  })

  const user = await prisma.user.create({
    data: {
      email: 'user@mailom.com',
      password: userPassword,
      name: '‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô ‡∏™‡∏°‡∏®‡∏±‡∏Å‡∏î‡∏¥‡πå',
      role: 'USER',
    },
  })

  console.log('‚úÖ Users created:', [admin, manager, employee, user].length)

  console.log('üå± Creating our gardens...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤
  const ourGardens = await Promise.all([
    prisma.ourGarden.create({
      data: {
        name: '‡∏™‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ó‡∏¥‡∏ï',
        location: '‡∏Ç‡∏≠‡∏ô‡πÅ‡∏Å‡πà‡∏ô',
        managerName: '‡∏û‡∏µ‡πà‡∏ó‡∏¥‡∏ï',
        description: '‡∏™‡∏ß‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏î‡∏¢‡∏û‡∏µ‡πà‡∏ó‡∏¥‡∏ï',
      },
    }),
    prisma.ourGarden.create({
      data: {
        name: '‡∏™‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏´‡∏°‡∏≠‡∏Å',
        location: '‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå',
        managerName: '‡∏û‡∏µ‡πà‡∏´‡∏°‡∏≠‡∏Å',
        description: '‡∏™‡∏ß‡∏ô‡∏™‡∏≤‡∏Ç‡∏≤ ‡∏î‡∏π‡πÅ‡∏•‡πÇ‡∏î‡∏¢‡∏û‡∏µ‡πà‡∏´‡∏°‡∏≠‡∏Å',
      },
    }),
    prisma.ourGarden.create({
      data: {
        name: '‡∏™‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°',
        location: '‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
        managerName: '‡∏û‡∏µ‡πà‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°',
        description: '‡∏™‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏° ‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏°‡πâ‡πÉ‡∏´‡∏ç‡πà',
      },
    }),
    prisma.ourGarden.create({
      data: {
        name: '‡∏™‡∏ß‡∏ô‡∏°‡∏µ‡∏™‡∏∏‡∏Ç',
        location: '‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
        managerName: '‡∏û‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏∏‡∏Ç',
        description: '‡∏™‡∏ß‡∏ô‡∏°‡∏µ‡∏™‡∏∏‡∏Ç ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°',
      },
    }),
  ])
  console.log('‚úÖ Our gardens created:', ourGardens.length)

  console.log('üè™ Creating supplier gardens...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ã‡∏∑‡πâ‡∏≠‡∏°‡∏≤
  const supplierGardens = await Promise.all([
    prisma.supplierGarden.create({
      data: {
        name: '‡∏ï‡∏∏‡πà‡∏ô ‡∏≠‡∏∏‡∏ö‡∏•',
        location: '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
        ownerName: '‡∏û‡∏µ‡πà‡∏ï‡∏∏‡πà‡∏ô',
        province: '‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
        district: '‡πÄ‡∏°‡∏∑‡∏≠‡∏á‡∏≠‡∏∏‡∏ö‡∏•‡∏£‡∏≤‡∏ä‡∏ò‡∏≤‡∏ô‡∏µ',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏ó‡∏¢‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°',
        location: '‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
        ownerName: '‡∏û‡∏µ‡πà‡πÄ‡∏û‡∏•‡∏á',
        province: '‡∏£‡πâ‡∏≠‡∏¢‡πÄ‡∏≠‡πá‡∏î',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡∏£‡∏∏‡πâ‡∏á‡∏•‡∏∞‡∏î‡∏≤',
        location: '‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
        ownerName: '‡∏û‡∏µ‡πà‡∏£‡∏∏‡πâ‡∏á',
        province: '‡∏°‡∏´‡∏≤‡∏™‡∏≤‡∏£‡∏Ñ‡∏≤‡∏°',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡∏≠.‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß',
        location: '‡πÄ‡∏•‡∏¢',
        ownerName: '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ß',
        province: '‡πÄ‡∏•‡∏¢',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡∏≠.‡∏ä‡∏≥‡∏ô‡∏≤‡∏ç',
        location: '‡∏ä‡∏≥‡∏ô‡∏≤‡∏ç',
        ownerName: '‡∏≠‡∏≤‡∏à‡∏≤‡∏£‡∏¢‡πå‡∏ä‡∏≥‡∏ô‡∏≤‡∏ç',
        province: '‡∏ö‡∏∏‡∏£‡∏µ‡∏£‡∏±‡∏°‡∏¢‡πå',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡∏™‡∏ß‡∏ô‡∏à‡∏¥‡πä‡∏ö',
        location: '‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ',
        ownerName: '‡∏û‡∏µ‡πà‡∏à‡∏¥‡πä‡∏ö',
        province: '‡∏≠‡∏∏‡∏î‡∏£‡∏ò‡∏≤‡∏ô‡∏µ',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡∏Ñ‡∏£‡∏π‡πÑ‡∏ó‡∏¢‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°',
        location: '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå',
        ownerName: '‡∏Ñ‡∏£‡∏π‡πÑ‡∏ó‡∏¢',
        province: '‡∏Å‡∏≤‡∏¨‡∏™‡∏¥‡∏ô‡∏ò‡∏∏‡πå',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡∏™‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ô‡∏≤‡∏à',
        location: '‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
        ownerName: '‡∏û‡∏µ‡πà‡∏ô‡∏≤‡∏à',
        province: '‡∏´‡∏ô‡∏≠‡∏á‡∏Ñ‡∏≤‡∏¢',
      },
    }),
    prisma.supplierGarden.create({
      data: {
        name: '‡∏≠‡∏±‡∏¢‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå',
        location: '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£',
        ownerName: '‡∏û‡∏µ‡πà‡∏≠‡∏±‡∏¢‡∏£‡∏¥‡∏ô‡∏ó‡∏£‡πå',
        province: '‡∏™‡∏Å‡∏•‡∏ô‡∏Ñ‡∏£',
      },
    }),
  ])
  console.log('‚úÖ Supplier gardens created:', supplierGardens.length)

  console.log('üîó Creating user-garden mappings...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏™‡∏ß‡∏ô
  await Promise.all([
    // Admin ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏™‡∏ß‡∏ô
    ...ourGardens.map(garden => 
      prisma.userGarden.create({
        data: {
          userId: admin.id,
          ourGardenId: garden.id,
          role: 'ADMIN',
        },
      })
    ),
    // Manager ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏ö‡∏≤‡∏á‡∏™‡∏ß‡∏ô
    prisma.userGarden.create({
      data: {
        userId: manager.id,
        ourGardenId: ourGardens[0].id, // ‡∏™‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏ó‡∏¥‡∏ï
        role: 'MANAGER',
      },
    }),
    prisma.userGarden.create({
      data: {
        userId: manager.id,
        ourGardenId: ourGardens[2].id, // ‡∏™‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°
        role: 'MANAGER',
      },
    }),
    // Employee ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏™‡∏ß‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    prisma.userGarden.create({
      data: {
        userId: employee.id,
        ourGardenId: ourGardens[1].id, // ‡∏™‡∏ß‡∏ô‡∏û‡∏µ‡πà‡∏´‡∏°‡∏≠‡∏Å
        role: 'VIEWER',
      },
    }),
    // User ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡πÑ‡∏î‡πâ‡∏™‡∏ß‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
    prisma.userGarden.create({
      data: {
        userId: user.id,
        ourGardenId: ourGardens[3].id, // ‡∏™‡∏ß‡∏ô‡∏°‡∏µ‡∏™‡∏∏‡∏Ç
        role: 'VIEWER',
      },
    }),
  ])
  console.log('‚úÖ User-garden mappings created')

  console.log('üí∞ Creating cost categories...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
  const costCategories = await prisma.costCategory.createMany({
    data: [
      { name: '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ', nameEn: 'Tree Price', description: '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ã‡∏∑‡πâ‡∏≠‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏à‡∏≤‡∏Å‡∏™‡∏ß‡∏ô' },
      { name: '‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á', nameEn: 'Transport', description: '‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ' },
      { name: '‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏ô', nameEn: 'Crane', description: '‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏ô‡∏¢‡∏Å‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ' },
      { name: '‡πÄ‡∏Ñ‡∏£‡∏ô/‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô', nameEn: 'Crane/Labor', description: '‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏ô‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤‡∏á‡∏≤‡∏ô' },
      { name: '‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πâ‡∏Ñ‡πâ‡∏≥', nameEn: 'Support Wood', description: '‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πâ‡∏Ñ‡πâ‡∏≥‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ' },
      { name: '‡∏Ñ‡πà‡∏≤‡πÅ‡∏û‡∏Ñ', nameEn: 'Packing', description: '‡∏Ñ‡πà‡∏≤‡πÅ‡∏û‡∏Ñ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ' },
      { name: '‡∏Ñ‡πà‡∏≤‡∏£‡∏ñ‡πÄ‡∏Æ‡∏µ‡∏¢‡∏ö', nameEn: 'Truck', description: '‡∏Ñ‡πà‡∏≤‡∏£‡∏ñ‡πÄ‡∏Æ‡∏µ‡∏¢‡∏ö‡∏Ç‡∏ô‡∏™‡πà‡∏á' },
      { name: '‡∏Ñ‡πà‡∏≤‡∏£‡∏ñ‡∏ó‡∏≠‡∏¢', nameEn: 'Trailer', description: '‡∏Ñ‡πà‡∏≤‡∏£‡∏ñ‡∏ó‡∏≠‡∏¢‡∏Ç‡∏ô‡∏™‡πà‡∏á' },
      { name: '‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á', nameEn: 'Labor', description: '‡∏Ñ‡πà‡∏≤‡πÅ‡∏£‡∏á‡∏á‡∏≤‡∏ô' },
      { name: '‡∏Ñ‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå', nameEn: 'Equipment', description: '‡∏Ñ‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå' },
      { name: '‡∏≠‡∏∑‡πà‡∏ô‡πÜ', nameEn: 'Others', description: '‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢‡∏≠‡∏∑‡πà‡∏ô‡πÜ' },
      { name: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡πÑ‡∏°‡πâ‡∏ï‡∏≤‡∏¢', nameEn: 'Dead Tree Fund', description: '‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ó‡∏∏‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÑ‡∏°‡πâ‡∏ï‡∏≤‡∏¢' },
    ],
  })
  console.log('‚úÖ Cost categories created')

  // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
  const categoryList = await prisma.costCategory.findMany()

  console.log('üõí Creating sample purchases...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ã‡∏∑‡πâ‡∏≠‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  const purchase1 = await prisma.purchase.create({
    data: {
      purchaseCode: 'TB68-001',
      purchaseDate: new Date('2025-01-30'),
      supplierGardenId: supplierGardens.find(g => g.name === '‡∏£‡∏∏‡πâ‡∏á‡∏•‡∏∞‡∏î‡∏≤')?.id || supplierGardens[2].id,
      ourGardenId: ourGardens[2].id, // ‡∏™‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°
      supplierRef: '‡∏ï‡∏∞‡πÅ‡∏ö‡∏Å',
      totalCost: 42713,
      status: 'COMPLETED',
      note: '‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡πÉ‡∏´‡∏ç‡πà ‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ',
    },
  })

  const purchase2 = await prisma.purchase.create({
    data: {
      purchaseCode: 'MP68-001',
      purchaseDate: new Date('2025-02-15'),
      supplierGardenId: supplierGardens.find(g => g.name === '‡πÄ‡∏û‡∏•‡∏á‡πÑ‡∏ó‡∏¢‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°')?.id || supplierGardens[1].id,
      ourGardenId: ourGardens[3].id, // ‡∏™‡∏ß‡∏ô‡∏°‡∏µ‡∏™‡∏∏‡∏Ç
      supplierRef: '‡∏û‡∏µ‡πà‡∏Å‡∏¥‡∏à',
      totalCost: 17491,
      status: 'COMPLETED',
    },
  })

  console.log('‚úÖ Sample purchases created:', 2)

  console.log('üí∏ Creating cost breakdowns...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡πÉ‡∏ä‡πâ‡∏à‡πà‡∏≤‡∏¢
  const treePriceCategory = categoryList.find(c => c.name === '‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ')
  const transportCategory = categoryList.find(c => c.name === '‡∏Ñ‡πà‡∏≤‡∏Ç‡∏ô‡∏™‡πà‡∏á')
  const craneCategory = categoryList.find(c => c.name === '‡∏Ñ‡πà‡∏≤‡πÄ‡∏Ñ‡∏£‡∏ô')
  const supportWoodCategory = categoryList.find(c => c.name === '‡∏Ñ‡πà‡∏≤‡πÑ‡∏°‡πâ‡∏Ñ‡πâ‡∏≥')
  const packingCategory = categoryList.find(c => c.name === '‡∏Ñ‡πà‡∏≤‡πÅ‡∏û‡∏Ñ')

  if (treePriceCategory && transportCategory && craneCategory && supportWoodCategory && packingCategory) {
    await prisma.productCost.createMany({
      data: [
        // ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ TB68-001
        { purchaseId: purchase1.id, costCategoryId: treePriceCategory.id, amount: 30000 },
        { purchaseId: purchase1.id, costCategoryId: transportCategory.id, amount: 9000 },
        { purchaseId: purchase1.id, costCategoryId: supportWoodCategory.id, amount: 271 },
        { purchaseId: purchase1.id, costCategoryId: packingCategory.id, amount: 800 },
        { purchaseId: purchase1.id, costCategoryId: craneCategory.id, amount: 2500 },
        // ‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ MP68-001
        { purchaseId: purchase2.id, costCategoryId: treePriceCategory.id, amount: 8000 },
        { purchaseId: purchase2.id, costCategoryId: transportCategory.id, amount: 6500 },
        { purchaseId: purchase2.id, costCategoryId: supportWoodCategory.id, amount: 440 },
        { purchaseId: purchase2.id, costCategoryId: packingCategory.id, amount: 300 },
        { purchaseId: purchase2.id, costCategoryId: craneCategory.id, amount: 1000 },
      ],
    })
  }
  console.log('‚úÖ Cost breakdowns created')

  console.log('üå≥ Creating sample products...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  const product1 = await prisma.product.create({
    data: {
      code: 'TB68-001',
      name: '‡∏ï‡∏∞‡πÅ‡∏ö‡∏Å',
      height: 4.5,
      width: 60,
      trunkSize: 60,
      potHeight: 80,
      potWidth: 2.8,
      location: '‡πÇ‡∏ã‡∏ô A',
      cost: 42713,
      price: 80000,
      purchaseId: purchase1.id,
      ourGardenId: ourGardens[2].id, // ‡∏™‡∏ß‡∏ô‡πÑ‡∏°‡πâ‡∏•‡πâ‡∏≠‡∏°
      sunlight: 'FULL',
      water: 'LOW',
      description: '‡∏ï‡∏∞‡πÅ‡∏ö‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡πÉ‡∏´‡∏ç‡πà ‡∏™‡∏†‡∏≤‡∏û‡∏î‡∏µ ‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏°‡πâ 60 ‡∏ô‡∏¥‡πâ‡∏ß',
    },
  })

  const product2 = await prisma.product.create({
    data: {
      code: 'MP68-001',
      name: '‡∏û‡∏¢‡∏≠‡∏°',
      height: 6.0,
      width: 14,
      trunkSize: 14,
      potHeight: 60,
      potWidth: 1.2,
      location: '‡πÇ‡∏ã‡∏ô B',
      cost: 17491,
      price: 35000,
      purchaseId: purchase2.id,
      ourGardenId: ourGardens[3].id, // ‡∏™‡∏ß‡∏ô‡∏°‡∏µ‡∏™‡∏∏‡∏Ç
      sunlight: 'PARTIAL',
      water: 'HIGH',
      description: '‡∏û‡∏¢‡∏≠‡∏°‡∏Ç‡∏ô‡∏≤‡∏î‡∏Å‡∏•‡∏≤‡∏á ‡∏´‡∏ô‡πâ‡∏≤‡πÑ‡∏°‡πâ 14 ‡∏ô‡∏¥‡πâ‡∏ß',
    },
  })

  console.log('‚úÖ Sample products created:', 2)

  console.log('üë§ Creating sample customer...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  const customer = await prisma.customer.create({
    data: {
      name: '‡∏ô‡∏≤‡∏¢ ‡∏™‡∏°‡∏ä‡∏≤‡∏¢ ‡πÉ‡∏à‡∏î‡∏µ',
      phone: '0812345678',
      address: '123 ‡∏ñ.‡∏™‡∏∏‡∏Ç‡∏∏‡∏°‡∏ß‡∏¥‡∏ó ‡πÅ‡∏Ç‡∏ß‡∏á‡∏Ñ‡∏•‡∏≠‡∏á‡∏ï‡∏±‡∏ô',
      province: '‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£',
      note: '‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏õ‡∏£‡∏∞‡∏à‡∏≥',
    },
  })

  console.log('üí∞ Creating sample sale...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏Ç‡∏≤‡∏¢‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á
  const sale = await prisma.sale.create({
    data: {
      productId: product2.id,
      customerId: customer.id,
      price: 35000,
      shipping: 5000,
      installation: 3000,
      otherCosts: 1000,
      totalCost: 44000,
      status: 'COMPLETED',
    },
  })

  // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Ç‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß
  await prisma.product.update({
    where: { id: product2.id },
    data: { status: 'SOLD' },
  })

  console.log('üìä Creating sample transactions...')
  // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ò‡∏∏‡∏£‡∏Å‡∏£‡∏£‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô
  const transaction1 = await prisma.transaction.create({
    data: {
      date: new Date('2025-01-30'),
      description: '‡∏ã‡∏∑‡πâ‡∏≠‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏ï‡∏∞‡πÅ‡∏ö‡∏Å TB68-001',
      type: 'EXPENSE',
      amount: 42713,
      balance: -42713,
      referenceId: purchase1.id,
      referenceType: 'PURCHASE',
      supplierGardenId: supplierGardens.find(g => g.name === '‡∏£‡∏∏‡πâ‡∏á‡∏•‡∏∞‡∏î‡∏≤')?.id,
    },
  })

  const transaction2 = await prisma.transaction.create({
    data: {
      date: new Date('2025-02-20'),
      description: '‡∏Ç‡∏≤‡∏¢‡∏ï‡πâ‡∏ô‡πÑ‡∏°‡πâ‡∏û‡∏¢‡∏≠‡∏° MP68-001',
      type: 'INCOME',
      amount: 44000,
      balance: 1287,
      referenceId: sale.id,
      referenceType: 'SALE',
    },
  })

  console.log('‚úÖ Seed data created successfully!')
  console.log({
    users: 4,
    ourGardens: ourGardens.length,
    supplierGardens: supplierGardens.length,
    userGardenMappings: 8,
    costCategories: categoryList.length,
    purchases: 2,
    products: 2,
    customer: 1,
    sale: 1,
    transactions: 2,
  })
}

main()
  .catch((e) => {
    console.error(e)
    process.exit(1)
  })
  .finally(async () => {
    await prisma.$disconnect()
  })