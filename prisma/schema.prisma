generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ผู้ใช้งาน
model User {
  id        String       @id @default(cuid())
  email     String       @unique
  password  String       // เพิ่ม password field
  name      String?
  role      Role         @default(USER)
  isActive  Boolean      @default(true) // เพิ่ม status
  lastLogin DateTime?    // บันทึกการเข้าสู่ระบบล่าสุด
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  userGardens UserGarden[] // สวนที่ผู้ใช้เข้าถึงได้

  @@map("users")
}

enum Role {
  USER      // ผู้ใช้งานทั่วไป - ดูข้อมูลได้อย่างจำกัด
  EMPLOYEE  // พนักงาน - จัดการข้อมูลสต็อก, การขาย
  MANAGER   // ผู้จัดการ - จัดการข้อมูลการซื้อ, รายงาน, การเงิน
  ADMIN     // ผู้ดูแลระบบ - เข้าถึงได้ทุกอย่าง
}

// สวนของเรา (สวนที่เราเป็นเจ้าของ)
model OurGarden {
  id          String        @id @default(cuid())
  name        String // ชื่อสวน เช่น "สวนพี่ทิต", "สวนพี่หมอก", "สวนไม้ล้อม", "สวนมีสุข"
  location    String? // ที่อยู่ของสวน
  description String? // รายละเอียดสวน
  managerName String? // ชื่อผู้จัดการสวน
  contactInfo String? // ข้อมูลติดต่อ
  isActive    Boolean       @default(true)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  userGardens UserGarden[] // ผู้ใช้ที่เข้าถึงสวนนี้ได้
  products    Product[] // สินค้าที่อยู่ในสวนนี้
  purchases   Purchase[] // การซื้อที่นำมาไว้ในสวนนี้

  @@map("our_gardens")
}

// การเชื่อมโยงผู้ใช้กับสวน (สำหรับ role-based access)
model UserGarden {
  id          String    @id @default(cuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  ourGardenId String
  ourGarden   OurGarden @relation(fields: [ourGardenId], references: [id])
  role        GardenRole @default(VIEWER) // สิทธิ์ในสวนนี้
  createdAt   DateTime  @default(now())

  @@unique([userId, ourGardenId])
  @@map("user_gardens")
}

enum GardenRole {
  VIEWER   // ดูข้อมูลได้อย่างเดียว
  MANAGER  // จัดการสวนได้
  ADMIN    // ควบคุมการเข้าถึงได้
}

// สวนที่ซื้อมา (แหล่งที่มาของต้นไม้)
model SupplierGarden {
  id           String        @id @default(cuid())
  name         String // ชื่อสวน เช่น "ตุ่น อุบล", "เพลงไทยไม้ล้อม", "รุ้งละดา"
  location     String? // ที่อยู่ของสวน
  ownerName    String? // ชื่อเจ้าของสวน เช่น "พี่ตุ่น", "พี่เพลง"
  contactInfo  String? // ข้อมูลติดต่อ
  province     String? // จังหวัด
  district     String? // อำเภอ
  subDistrict  String? // ตำบล
  isActive     Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  purchases    Purchase[] // การซื้อจากสวนนี้
  transactions Transaction[] // บันทึกการเงินที่เกี่ยวข้อง

  @@map("supplier_gardens")
}

// หมวดหมู่ค่าใช้จ่าย
model CostCategory {
  id           String        @id @default(cuid())
  name         String        @unique // ชื่อหมวดหมู่
  nameEn       String? // ชื่อภาษาอังกฤษ
  description  String? // คำอธิบาย
  isActive     Boolean       @default(true)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  productCosts ProductCost[] // รายการค่าใช้จ่ายในหมวดนี้

  @@map("cost_categories")
}

// การซื้อต้นไม้
model Purchase {
  id                String         @id @default(cuid())
  purchaseCode      String         @unique // รหัสการซื้อ เช่น "TB68-001", "MP68-001"
  purchaseDate      DateTime // วันที่ซื้อ
  supplierGardenId  String // สวนที่ซื้อมา
  supplierGarden    SupplierGarden @relation(fields: [supplierGardenId], references: [id])
  ourGardenId       String? // สวนของเราที่จะนำไปไว้
  ourGarden         OurGarden?     @relation(fields: [ourGardenId], references: [id])
  supplierRef       String? // รหัสอ้างอิงจากผู้ขาย เช่น "พี่กิจ", "พี่ทิต"
  totalCost         Float // ต้นทุนรวมทั้งหมด
  status            PurchaseStatus @default(PENDING)
  note              String? // หมายเหตุ
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  productCosts      ProductCost[] // รายการค่าใช้จ่ายแยกรายการ
  products          Product[] // ต้นไม้ที่ได้จากการซื้อครั้งนี้

  @@map("purchases")
}

// สินค้า (ต้นไม้)
model Product {
  id          String         @id @default(cuid())
  code        String         @unique
  name        String
  description String?
  images      ProductImage[]
  height      Float? // ความสูงต้น (เมตร)
  width       Float? // หน้าไม้ (นิ้ว)
  trunkSize   Float? // ขนาดลำต้น
  potHeight   Float? // ความสูงตุ้ม (ซม.)
  potWidth    Float? // ความกว้างตุ้ม (เมตร)
  location    String? // ที่อยู่ปัจจุบันในสวน
  sunlight    Sunlight       @default(FULL)
  water       WaterNeed      @default(HIGH)
  cost        Float // ต้นทุนต่อต้น (จะคำนวณจาก ProductCost)
  price       Float // ราคาขาย
  status      ProductStatus  @default(AVAILABLE)
  purchaseId  String? // การซื้อที่ได้ต้นไม้นี้มา
  purchase    Purchase?      @relation(fields: [purchaseId], references: [id])
  ourGardenId String? // สวนของเราที่เก็บต้นไม้นี้
  ourGarden   OurGarden?     @relation(fields: [ourGardenId], references: [id])
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
  sales       Sale[]

  @@map("products")
}

// รูปภาพสินค้า
model ProductImage {
  id        String   @id @default(cuid())
  url       String
  isMain    Boolean  @default(false)
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())

  @@map("product_images")
}

// ค่าใช้จ่ายแยกรายการ
model ProductCost {
  id             String       @id @default(cuid())
  purchaseId     String // การซื้อที่เกี่ยวข้อง
  purchase       Purchase     @relation(fields: [purchaseId], references: [id])
  costCategoryId String // หมวดหมู่ค่าใช้จ่าย
  costCategory   CostCategory @relation(fields: [costCategoryId], references: [id])
  amount         Float // จำนวนเงิน
  description    String? // รายละเอียดเพิ่มเติม
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt

  @@map("product_costs")
}

// บันทึกการเงิน (บัญชีทุนไม้ล้อม)
model Transaction {
  id                String          @id @default(cuid())
  date              DateTime // วันที่ทำรายการ
  description       String // รายละเอียด
  type              TransactionType // ประเภทรายการ
  amount            Float // จำนวนเงิน
  balance           Float? // ยอดคงเหลือ
  referenceId       String? // อ้างอิงไป Purchase หรือ Sale
  referenceType     String? // ประเภทการอ้างอิง
  supplierGardenId  String? // สวนที่ซื้อมา (ถ้ามี)
  supplierGarden    SupplierGarden? @relation(fields: [supplierGardenId], references: [id])
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt

  @@map("transactions")
}

enum Sunlight {
  FULL // ชอบแดด
  PARTIAL // แดดน้อย
}

enum WaterNeed {
  HIGH // ชอบน้ำ
  MEDIUM // ปานกลาง
  LOW // ไม่ชอบน้ำ
}

enum ProductStatus {
  AVAILABLE // พร้อมขาย
  SOLD // ขายแล้ว
  RESERVED // จองแล้ว
  DEAD // ไม้ตาย
}

enum PurchaseStatus {
  PENDING // รอดำเนินการ
  COMPLETED // เสร็จสิ้น
  CANCELLED // ยกเลิก
}

enum TransactionType {
  INCOME // รายรับ
  EXPENSE // รายจ่าย
  TRANSFER // โอนเงิน
}

// การขาย
model Sale {
  id           String     @id @default(cuid())
  productId    String
  product      Product    @relation(fields: [productId], references: [id])
  customerId   String
  customer     Customer   @relation(fields: [customerId], references: [id])
  price        Float
  shipping     Float?
  installation Float?
  otherCosts   Float?
  totalCost    Float
  status       SaleStatus @default(PENDING)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  @@map("sales")
}

enum SaleStatus {
  PENDING // รอดำเนินการ
  COMPLETED // เสร็จสิ้น
  CANCELLED // ยกเลิก
}

// ลูกค้า
model Customer {
  id        String   @id @default(cuid())
  name      String
  phone     String?
  address   String?
  province  String?
  note      String?
  sales     Sale[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("customers")
}

// ข้อมูลติดต่อ (ผู้จำหน่าย, ลูกค้า, ผู้ซื้อ)
model Contact {
  id          String      @id @default(cuid())
  name        String      // ชื่อบุคคล/บริษัท
  type        ContactType // ประเภทการติดต่อ
  phone       String?     // เบอร์โทร
  email       String?     // อีเมล
  address     String?     // ที่อยู่
  province    String?     // จังหวัด
  district    String?     // อำเภอ
  subDistrict String?     // ตำบล
  contactInfo String?     // ข้อมูลติดต่ออื่นๆ
  note        String?     // หมายเหตุ
  isActive    Boolean     @default(true)
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("contacts")
}

enum ContactType {
  SUPPLIER  // ผู้จำหน่าย
  CUSTOMER  // ลูกค้า
  VENDOR    // ผู้ซื้อ
}
